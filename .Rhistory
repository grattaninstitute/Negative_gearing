sliderInput("rate_4", label = "$80,000-$180,000 marginal rate",
min = 0, max = 0.6, value = 0.37, step = 0.005),
sliderInput("bracket_4", label = "First bracket",
min = 0, max = 250e3, value = 180000, step = 100),
sliderInput("rate_5", label = "$180,000- marginal rate",
min = 0, max = 0.6, value = 0.45, step = 0.005)
),
mainPanel(
tableOutput("values")
)
)
,
#####################################
#####################################
#               SERVER              #
#####################################
#####################################
server = function(input, output) {
sliderValues <- reactive({
# The heavy lifting begins here.
tax_rates <-
data.table(
brackets = c(0, input$bracket_1, input$bracket_2, input$bracket_3, input$bracket_4),
rates = c(input$rate_1,
input$rate_2,
input$rate_3,
input$rate_4,
input$rate_5)
) %>%
mutate(
tax_amount = NA_real_
)
for (i in 1:nrow(tax_rates)){
if (i == 1 || i == 2) {
tax_rates$tax_amount <- 0
} else {
tax_rates$tax_amount[i] <-
tax_rates$tax_amount[i - 1] +
tax_rates$rates[i - 1] * (tax_rates$brackets[i] - tax_rates$brackets[i - 1])
}
}
txamt <- function(bracket.lwr){
tax_rates %>%
filter(brackets == bracket.lwr) %$%
tax_amount
}
txmr <- function(bracket.lwr){
tax_rates %>%
filter(brackets == bracket.lwr) %$%
rates
}
new_income_tax <- function(income){
ML.lower <- 20542
ML.upper <- 24167
medicare.base.rate <- 0.015
LITO <- ifelse(income < input$bracket_2, 445, ifelse(income < 66667,
445 - ((income - input$bracket_2) * 0.015), 0))
tax <- ifelse(income < input$bracket_1, 0, ifelse(income < input$bracket_2,
txmr(input$bracket_1) * (income - input$bracket_1), # from 0.19
ifelse(income < input$bracket_3,
txamt(input$bracket_2) + txmr(input$bracket_2) * (income - input$bracket_2), # from 0.325
ifelse(income < input$bracket_4,
txamt(input$bracket_3) + txmr(input$bracket_3) * (income - input$bracket_3), # from 0.37
txamt(input$bracket_4) + txmr(input$bracket_4) * (income - input$bracket_4)))))
medicare.levy <- ifelse(income <= ML.lower, 0, ifelse(income > ML.lower & income <= ML.upper,
0.1 * (income - 20542),
0.015 * income))
out <- pmax(tax + medicare.levy - LITO, 0)
return(out)
}
fread(sample_file_of(2013), select = "Taxable_Income") %>%
mutate(diff = income_tax(Taxable_Income) - new_income_tax(Taxable_Income)) %$%
{sum(diff)*50 - forty.three} %>%
grattan_dollar(.) ->
the_amount_remaining
# Reactive expression to compose a data frame containing all of
# the values
# Compose data frame
brackets <-
paste0(c(0, input$bracket_1, input$bracket_2, input$bracket_3),
"-",
c(input$bracket_1, input$bracket_2, input$bracket_3, input$bracket_4)
)
data.frame(
`Marginal rate of` = c(brackets,
"Amount minus $43bn"),
Value = as.character(c(input$rate_1,
input$rate_2,
input$rate_3,
input$rate_4,
input$rate_5,
the_amount_remaining)),
stringsAsFactors=FALSE)
})
# Show the values using an HTML table
output$values <- renderTable(
expr = sliderValues(),
align = "llr",
include.rownames = FALSE
)
}
)
shinyApp( options = list(height = 1024),
ui = sidebarLayout(
fluid = FALSE,
sidebarPanel = sidebarPanel(
sliderInput("rate_1", label = "$0-$18,200 marginal rate",
min = 0, max = 0.6, value = 0, step = 0.005),
sliderInput("bracket_1", label = "First bracket",
min = 0, max = 250e3, value = 18200, step = 100),
sliderInput("rate_2", label = "$18,200-$37,000 marginal rate",
min = 0, max = 0.6, value = 0.19, step = 0.005),
sliderInput("bracket_2", label = "First bracket",
min = 0, max = 250e3, value = 37000, step = 100),
sliderInput("rate_3", label = "$37,000-$80,000 marginal rate",
min = 0, max = 0.6, value = 0.325, step = 0.005),
sliderInput("bracket_3", label = "First bracket",
min = 0, max = 250e3, value = 80000, step = 100),
sliderInput("rate_4", label = "$80,000-$180,000 marginal rate",
min = 0, max = 0.6, value = 0.37, step = 0.005),
sliderInput("bracket_4", label = "First bracket",
min = 0, max = 250e3, value = 180000, step = 100),
sliderInput("rate_5", label = "$180,000- marginal rate",
min = 0, max = 0.6, value = 0.45, step = 0.005)
),
mainPanel(
tableOutput("values")
)
)
,
#####################################
#####################################
#               SERVER              #
#####################################
#####################################
server = function(input, output) {
sliderValues <- reactive({
# The heavy lifting begins here.
tax_rates <-
data.table(
brackets = c(0, input$bracket_1, input$bracket_2, input$bracket_3, input$bracket_4),
rates = c(input$rate_1,
input$rate_2,
input$rate_3,
input$rate_4,
input$rate_5)
) %>%
mutate(
tax_amount = NA_real_
)
for (i in 1:nrow(tax_rates)){
if (i == 1 || i == 2) {
tax_rates$tax_amount <- 0
} else {
tax_rates$tax_amount[i] <-
tax_rates$tax_amount[i - 1] +
tax_rates$rates[i - 1] * (tax_rates$brackets[i] - tax_rates$brackets[i - 1])
}
}
txamt <- function(bracket.lwr){
tax_rates %>%
filter(brackets == bracket.lwr) %$%
tax_amount
}
txmr <- function(bracket.lwr){
tax_rates %>%
filter(brackets == bracket.lwr) %$%
rates
}
new_income_tax <- function(income){
ML.lower <- 20542
ML.upper <- 24167
medicare.base.rate <- 0.015
LITO <- ifelse(income < input$bracket_2, 445, ifelse(income < 66667,
445 - ((income - input$bracket_2) * 0.015), 0))
tax <- ifelse(income < input$bracket_1, 0, ifelse(income < input$bracket_2,
txmr(input$bracket_1) * (income - input$bracket_1), # from 0.19
ifelse(income < input$bracket_3,
txamt(input$bracket_2) + txmr(input$bracket_2) * (income - input$bracket_2), # from 0.325
ifelse(income < input$bracket_4,
txamt(input$bracket_3) + txmr(input$bracket_3) * (income - input$bracket_3), # from 0.37
txamt(input$bracket_4) + txmr(input$bracket_4) * (income - input$bracket_4)))))
medicare.levy <- ifelse(income <= ML.lower, 0, ifelse(income > ML.lower & income <= ML.upper,
0.1 * (income - 20542),
0.015 * income))
out <- pmax(tax + medicare.levy - LITO, 0)
return(out)
}
fread(sample_file_of(2013), select = "Taxable_Income") %>%
mutate(diff = income_tax(Taxable_Income) - new_income_tax(Taxable_Income)) %$%
{sum(diff)*50 - forty.three} %>%
grattan_dollar(.) ->
the_amount_remaining
# Reactive expression to compose a data frame containing all of
# the values
# Compose data frame
brackets <-
paste0(c(0, input$bracket_1, input$bracket_2, input$bracket_3),
"-",
c(input$bracket_1, input$bracket_2, input$bracket_3, input$bracket_4)
)
data.frame(
`Marginal rate of` = c(brackets,
"",
"Amount minus $43bn"),
Value = as.character(c(input$rate_1,
input$rate_2,
input$rate_3,
input$rate_4,
input$rate_5,
the_amount_remaining)),
stringsAsFactors=FALSE)
})
# Show the values using an HTML table
output$values <- renderTable(
expr = sliderValues(),
align = "llr",
include.rownames = FALSE
)
}
)
shinyApp( options = list(height = 1024),
ui = sidebarLayout(
fluid = FALSE,
sidebarPanel = sidebarPanel(
sliderInput("rate_1", label = "$0-$18,200 marginal rate",
min = 0, max = 0.6, value = 0, step = 0.005),
sliderInput("bracket_1", label = "First bracket",
min = 0, max = 250e3, value = 18200, step = 100),
sliderInput("rate_2", label = "$18,200-$37,000 marginal rate",
min = 0, max = 0.6, value = 0.19, step = 0.005),
sliderInput("bracket_2", label = "First bracket",
min = 0, max = 250e3, value = 37000, step = 100),
sliderInput("rate_3", label = "$37,000-$80,000 marginal rate",
min = 0, max = 0.6, value = 0.325, step = 0.005),
sliderInput("bracket_3", label = "First bracket",
min = 0, max = 250e3, value = 80000, step = 100),
sliderInput("rate_4", label = "$80,000-$180,000 marginal rate",
min = 0, max = 0.6, value = 0.37, step = 0.005),
sliderInput("bracket_4", label = "First bracket",
min = 0, max = 250e3, value = 180000, step = 100),
sliderInput("rate_5", label = "$180,000- marginal rate",
min = 0, max = 0.6, value = 0.45, step = 0.005)
),
mainPanel(
tableOutput("values")
)
)
,
#####################################
#####################################
#               SERVER              #
#####################################
#####################################
server = function(input, output) {
sliderValues <- reactive({
# The heavy lifting begins here.
tax_rates <-
data.table(
brackets = c(0, input$bracket_1, input$bracket_2, input$bracket_3, input$bracket_4),
rates = c(input$rate_1,
input$rate_2,
input$rate_3,
input$rate_4,
input$rate_5)
) %>%
mutate(
tax_amount = NA_real_
)
for (i in 1:nrow(tax_rates)){
if (i == 1 || i == 2) {
tax_rates$tax_amount <- 0
} else {
tax_rates$tax_amount[i] <-
tax_rates$tax_amount[i - 1] +
tax_rates$rates[i - 1] * (tax_rates$brackets[i] - tax_rates$brackets[i - 1])
}
}
txamt <- function(bracket.lwr){
tax_rates %>%
filter(brackets == bracket.lwr) %$%
tax_amount
}
txmr <- function(bracket.lwr){
tax_rates %>%
filter(brackets == bracket.lwr) %$%
rates
}
new_income_tax <- function(income){
ML.lower <- 20542
ML.upper <- 24167
medicare.base.rate <- 0.015
LITO <- ifelse(income < input$bracket_2, 445, ifelse(income < 66667,
445 - ((income - input$bracket_2) * 0.015), 0))
tax <- ifelse(income < input$bracket_1, 0, ifelse(income < input$bracket_2,
txmr(input$bracket_1) * (income - input$bracket_1), # from 0.19
ifelse(income < input$bracket_3,
txamt(input$bracket_2) + txmr(input$bracket_2) * (income - input$bracket_2), # from 0.325
ifelse(income < input$bracket_4,
txamt(input$bracket_3) + txmr(input$bracket_3) * (income - input$bracket_3), # from 0.37
txamt(input$bracket_4) + txmr(input$bracket_4) * (income - input$bracket_4)))))
medicare.levy <- ifelse(income <= ML.lower, 0, ifelse(income > ML.lower & income <= ML.upper,
0.1 * (income - 20542),
0.015 * income))
out <- pmax(tax + medicare.levy - LITO, 0)
return(out)
}
fread(sample_file_of(2013), select = "Taxable_Income") %>%
mutate(diff = income_tax(Taxable_Income) - new_income_tax(Taxable_Income)) %$%
{sum(diff)*50 - forty.three} %>%
grattan_dollar(.) ->
the_amount_remaining
# Reactive expression to compose a data frame containing all of
# the values
# Compose data frame
brackets <-
paste0(paste0("$", prettyNum(c(0, input$bracket_1, input$bracket_2, input$bracket_3), big.mark = ",")),
"-",
paste0("$", prettyNum(c(input$bracket_1, input$bracket_2, input$bracket_3, input$bracket_4), big.mark = ","))
)
data.frame(
`Marginal rate of` = c(brackets,
"",
"Amount minus $43bn"),
Value = as.character(c(input$rate_1,
input$rate_2,
input$rate_3,
input$rate_4,
input$rate_5,
the_amount_remaining)),
stringsAsFactors=FALSE)
})
# Show the values using an HTML table
output$values <- renderTable(
expr = sliderValues(),
align = "llr",
include.rownames = FALSE
)
}
)
?renderTable
data.table(
Taxable_Income = 1:250000
) %>%
mutate(
marginal.tax = income_tax(Taxable_Income + 1) - income_tax(Taxable_Income),
new.marginal.tax = new_income_tax(Taxable_Income + 1) - new_income_tax(Taxable_Income)
) %>%
gather(new_or_old, marginal.rate, marginal.tax,new.marginal.tax) %>%
mutate(new_or_old = ifelse(new_or_old == "marginal.tax", "New", "Old")) %>%
grplot(aes(x = Taxable_Income, y = marginal.rate,
group = new_or_old, color = new_or_old, label = new_or_old)) +
geom_line() +
scale_x_continuous(limits = c(0,2.5e5), label=grattan_dollar) +
scale_y_continuous(label=percent) +
annotate("text",
label = "Old rate",
size = 7.14,
fontface = "bold",
color = gpal(2)[1],
x = 50e3,
y = 0.38,
vjust = 1) +
annotate("text",
label = "New rate",
size = 7.14,
fontface = "bold",
color = gpal(2)[2],
x = 88e3,
y = 0.205,
vjust = 0,
hjust = 0)
tax_rates <-
data.table(
brackets = c(0, 18200, 37000, 80000, 180000),
rates = c(0, 0.17, 0.325, 0.37, 0.45)
) %>%
mutate(
tax_amount = NA_real_
)
for (i in 1:nrow(tax_rates)){
if (i == 1 || i == 2) {
tax_rates$tax_amount <- 0
} else {
tax_rates$tax_amount[i] <-
tax_rates$tax_amount[i - 1] +
tax_rates$rates[i - 1] * (tax_rates$brackets[i] - tax_rates$brackets[i - 1])
}
}
txamt <- function(bracket.lwr){
tax_rates %>%
filter(brackets == bracket.lwr) %$%
tax_amount
}
txmr <- function(bracket.lwr){
tax_rates %>%
filter(brackets == bracket.lwr) %$%
rates
}
new_income_tax <- function(income){
ML.lower <- 20542
ML.upper <- 24167
medicare.base.rate <- 0.015
LITO <- ifelse(income < 37000, 445, ifelse(income < 66667,
445 - ((income - 37000) * 0.015), 0))
tax <- ifelse(income < 18200, 0, ifelse(income < 37000,
txmr(18200) * (income - 18200), # from 0.19
ifelse(income < 80000,
txamt(37000) + txmr(37000) * (income - 37000), # from 0.325
ifelse(income < 180000,
txamt(80000) + txmr(80000) * (income - 80000), # from 0.37
txamt(180000) + txmr(180000) * (income - 180000)))))
medicare.levy <- ifelse(income <= ML.lower, 0, ifelse(income > ML.lower & income <= ML.upper,
0.1 * (income - 20542),
0.015 * income))
out <- pmax(tax + medicare.levy - LITO, 0)
return(out)
}
data.table(
Taxable_Income = 1:250000
) %>%
mutate(
marginal.tax = income_tax(Taxable_Income + 1) - income_tax(Taxable_Income),
new.marginal.tax = new_income_tax(Taxable_Income + 1) - new_income_tax(Taxable_Income)
) %>%
gather(new_or_old, marginal.rate, marginal.tax,new.marginal.tax) %>%
mutate(new_or_old = ifelse(new_or_old == "marginal.tax", "New", "Old")) %>%
grplot(aes(x = Taxable_Income, y = marginal.rate,
group = new_or_old, color = new_or_old, label = new_or_old)) +
geom_line() +
scale_x_continuous(limits = c(0,2.5e5), label=grattan_dollar) +
scale_y_continuous(label=percent) +
annotate("text",
label = "Old rate",
size = 7.14,
fontface = "bold",
color = gpal(2)[1],
x = 50e3,
y = 0.38,
vjust = 1) +
annotate("text",
label = "New rate",
size = 7.14,
fontface = "bold",
color = gpal(2)[2],
x = 88e3,
y = 0.205,
vjust = 0,
hjust = 0)
data.table(
Taxable_Income = 10*(1:25000)
) %>%
mutate(
marginal.tax = income_tax(Taxable_Income + 1) - income_tax(Taxable_Income),
new.marginal.tax = new_income_tax(Taxable_Income + 1) - new_income_tax(Taxable_Income)
) %>%
gather(new_or_old, marginal.rate, marginal.tax,new.marginal.tax) %>%
mutate(new_or_old = ifelse(new_or_old == "marginal.tax", "New", "Old")) %>%
grplot(aes(x = Taxable_Income, y = marginal.rate,
group = new_or_old, color = new_or_old, label = new_or_old)) +
geom_line() +
scale_x_continuous(limits = c(0,2.5e5), label=grattan_dollar) +
scale_y_continuous(label=percent) +
annotate("text",
label = "Old rate",
size = 7.14,
fontface = "bold",
color = gpal(2)[1],
x = 50e3,
y = 0.38,
vjust = 1) +
annotate("text",
label = "New rate",
size = 7.14,
fontface = "bold",
color = gpal(2)[2],
x = 88e3,
y = 0.205,
vjust = 0,
hjust = 0)
dat1 <- structure(list(X1 = c(1147L, 748L, 1147L, 944L, 841L, 938L, 513L,
645L, 577L, 309L), X2 = c(2298L, 1017L, 1741L, 1380L, 1230L,
1460L, 696L, 1050L, 1006L, 442L), X3 = c(1239L, 634L, 1037L,
979L, 766L, 624L, 557L, 503L, 425L, 337L), X4 = c(1180L, 393L,
883L, 699L, 641L, 456L, 478L, 378L, 321L, 227L), X5 = c(1178L,
650L, 892L, 889L, 767L, 660L, 384L, 547L, 457L, 318L), X6 = c(3135L,
1137L, 1493L, 1371L, 1024L, 1103L, 846L, 753L, 728L, 425L), X7 = c(1989L,
807L, 1368L, 1071L, 1154L, 1055L, 662L, 658L, 680L, 435L), X8 = c(4469L,
1917L, 2524L, 2294L, 1834L, 2082L, 1181L, 1240L, 1392L, 825L),
X9 = c(394L, 553L, 666L, 900L, 707L, 673L, 503L, 511L, 478L,
323L), X10 = c(619L, 1550L, 2069L, 1710L, 2023L, 1473L, 1137L,
1041L, 1069L, 886L)), .Names = c("X1", "X2", "X3", "X4",
"X5", "X6", "X7", "X8", "X9", "X10"), row.names = c(11541L, 11861L,
985L, 4702L, 301L, 234L, 5876L, 2530L, 247L, 5843L), class = "data.frame")
dat1
names(dat1)
dat <- data,table::CJ(X = paste0("X", 1:1e4), Z = 1:50)
dat <- data.table::CJ(X = paste0("X", 1:1e4), Z = 1:50)
str(dat)
dat %>% mutate(y = rnorm(nrow(.))) %>%  spread(key = X, value = y)
dat %>% mutate(y = rnorm(nrow(.))) %>%  spread(key = X, value = y) %>% dim
dat %>% mutate(response = rnorm(50))
dat.wide <- dat %>% mutate(y = rnorm(nrow(.))) %>%  spread(key = X, value = y) %>% mutate(response = rnorm(50))
chartSeries
?reactive
NA == NA
is.na(NA)
?renderPlot
forty.three <- cpi_inflator_quarters(43 * 10^9, nominal.date = "2014-Q4", target.date = "2012-Q4") # 2012-13 taxstats
install.packages("RcppEigen", dependencies = T)
fread("JustTaxableIncome.csv")
?sidebarLayout

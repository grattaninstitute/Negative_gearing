warnings()
RColorBrewer::brewer.pal(11, name="Spectral")
welfare.by.income.quintile %>%
mutate(Allowance = factor(Allowance, levels = rev(welfare.by.income.quintile$Allowance), ordered = TRUE)) %>%
mutate(text = ifelse(Gross_income_quintile == 2 & total > 1e8, gsub("_", " ", Allowance, fixed = TRUE), NA_character_)) %>%
ggplot(aes(x = Gross_income_quintile, y = total, fill = Allowance, order = Allowance)) +
geom_bar(stat = "identity", position = "stack") +
geom_text(aes(label = text)) +
scale_fill_brewer(palette = rep(RColorBrewer::brewer.pal(11, name="Spectral"), 2))
rep(RColorBrewer::brewer.pal(11, name="Spectral"), 2)
welfare.by.income.quintile %>%
mutate(Allowance = factor(Allowance, levels = rev(welfare.by.income.quintile$Allowance), ordered = TRUE)) %>%
mutate(text = ifelse(Gross_income_quintile == 2 & total > 1e8, gsub("_", " ", Allowance, fixed = TRUE), NA_character_)) %>%
ggplot(aes(x = Gross_income_quintile, y = total, fill = Allowance, order = Allowance)) +
geom_bar(stat = "identity", position = "stack") +
geom_text(aes(label = text)) +
scale_fill_manual(values = rep(RColorBrewer::brewer.pal(11, name="Spectral"), 2))
welfare.by.income.quintile %>%
mutate(Allowance = factor(Allowance, levels = rev(welfare.by.income.quintile$Allowance), ordered = TRUE)) %>%
mutate(text = ifelse(Gross_income_quintile == 2 & total > 1e8, gsub("_", " ", Allowance, fixed = TRUE), NA_character_)) %>%
ggplot(aes(x = Gross_income_quintile, y = total, fill = Allowance, order = Allowance)) +
geom_bar(stat = "identity", position = "stack") +
geom_text(aes(label = text)) +
scale_fill_manual(values = c(rep(RColorBrewer::brewer.pal(11, name="Spectral"), 2), "black"))
welfare.by.income.quintile %>%
mutate(Allowance = factor(Allowance, levels = rev(welfare.by.income.quintile$Allowance), ordered = TRUE)) %>%
mutate(text = ifelse(Gross_income_quintile == 2 & total > 1e7, gsub("_", " ", Allowance, fixed = TRUE), NA_character_)) %>%
ggplot(aes(x = Gross_income_quintile, y = total, fill = Allowance, order = Allowance)) +
geom_bar(stat = "identity", position = "stack") +
geom_text(aes(label = text)) +
scale_fill_manual(values = c(rep(RColorBrewer::brewer.pal(11, name="Spectral"), 2), "black"))
welfare.by.income.quintile %>%
mutate(Allowance = factor(Allowance, levels = rev(welfare.by.income.quintile$Allowance), ordered = TRUE)) %>%
mutate(text = ifelse(Gross_income_quintile == 2 & total > 1e7, gsub("_", " ", Allowance, fixed = TRUE), NA_character_)) %>%
group_by(Gross_income_quintile) %>%
arrange(desc(total)) %>%
mutate(text.y = cumsum(total)) %>%
ggplot(aes(x = Gross_income_quintile, fill = Allowance, order = Allowance)) +
geom_bar(aes(y = total), stat = "identity", position = "stack") +
geom_text(aes(label = text, y = text.y)) +
scale_fill_manual(values = c(rep(RColorBrewer::brewer.pal(11, name="Spectral"), 2), "black"))
welfare.by.income.quintile %>%
mutate(Allowance = factor(Allowance, levels = (welfare.by.income.quintile$Allowance), ordered = TRUE)) %>%
mutate(text = ifelse(Gross_income_quintile == 2 & total > 1e7, gsub("_", " ", Allowance, fixed = TRUE), NA_character_)) %>%
group_by(Gross_income_quintile) %>%
arrange(desc(total)) %>%
mutate(text.y = cumsum(total)) %>%
ggplot(aes(x = Gross_income_quintile, fill = Allowance, order = Allowance)) +
geom_bar(aes(y = total), stat = "identity", position = "stack") +
geom_text(aes(label = text, y = text.y)) +
scale_fill_manual(values = c(rep(RColorBrewer::brewer.pal(11, name="Spectral"), 2), "black"))
welfare.by.income.quintile %>%
mutate(Allowance = factor(Allowance, levels = (welfare.by.income.quintile$Allowance), ordered = TRUE)) %>%
mutate(text = ifelse(Gross_income_quintile == 2 & total > 1e7, gsub("_", " ", Allowance, fixed = TRUE), NA_character_)) %>%
group_by(Gross_income_quintile) %>%
arrange(desc(total)) %>%
mutate(text.y = cumsum(total)) %>%
ggplot(aes(x = Gross_income_quintile, fill = Allowance, order = Allowance)) +
geom_bar(aes(y = total), stat = "identity", position = "stack") +
geom_text(aes(label = text, y = text.y), vjust = 1) +
scale_fill_manual(values = c(rep(RColorBrewer::brewer.pal(11, name="Spectral"), 2), "black"))
welfare.by.income.quintile %>%
mutate(Allowance = factor(Allowance, levels = (welfare.by.income.quintile$Allowance), ordered = TRUE)) %>%
mutate(text = ifelse(Gross_income_quintile == 2 & total > 1e7, gsub("_", " ", Allowance, fixed = TRUE), NA_character_)) %>%
group_by(Gross_income_quintile) %>%
arrange(desc(total)) %>%
mutate(text.y = cumsum(total)) %>%
ggplot(aes(x = Gross_income_quintile, fill = Allowance, order = Allowance)) +
geom_bar(aes(y = total), stat = "identity", position = "stack") +
geom_text(aes(label = text, y = text.y), vjust = 1) +
scale_fill_manual(values = c(rep(RColorBrewer::brewer.pal(11, name="Spectral"), 2), "black")) +
theme_light(base_size = 18)
welfare.by.income.quintile %>%
mutate(Allowance = factor(Allowance, levels = (welfare.by.income.quintile$Allowance), ordered = TRUE)) %>%
mutate(text = ifelse(Gross_income_quintile == 2 & total > 1e7, gsub("_", " ", Allowance, fixed = TRUE), NA_character_)) %>%
group_by(Gross_income_quintile) %>%
arrange(desc(total)) %>%
mutate(text.y = cumsum(total)) %>%
ggplot(aes(x = Gross_income_quintile, fill = Allowance, order = Allowance)) +
geom_bar(aes(y = total), stat = "identity", position = "stack") +
geom_text(aes(label = text, y = text.y), vjust = 1, fontface = "bold", size = 7.1) +
scale_fill_manual(values = c(rep(RColorBrewer::brewer.pal(11, name="Spectral"), 2), "black")) +
theme_light(base_size = 18)
welfare.by.income.quintile %>%
mutate(Allowance = factor(Allowance, levels = (welfare.by.income.quintile$Allowance), ordered = TRUE)) %>%
mutate(text = ifelse(Gross_income_quintile == 2 & total > 1e7, gsub("_", " ", Allowance, fixed = TRUE), NA_character_)) %>%
group_by(Gross_income_quintile) %>%
arrange(desc(total)) %>%
mutate(text.y = cumsum(total)) %>%
ggplot(aes(x = Gross_income_quintile, fill = Allowance, order = Allowance)) +
geom_bar(aes(y = total), stat = "identity", position = "stack") +
geom_text(aes(label = text, y = text.y), vjust = 1, fontface = "bold", size = 4.5) +
scale_fill_manual(values = c(rep(RColorBrewer::brewer.pal(11, name="Spectral"), 2), "black")) +
theme_light(base_size = 18)
welfare.by.income.quintile %>%
mutate(Allowance = factor(Allowance, levels = (welfare.by.income.quintile$Allowance), ordered = TRUE)) %>%
mutate(text = ifelse(Gross_income_quintile == 2 & total > 1e7, gsub("_", " ", Allowance, fixed = TRUE), NA_character_)) %>%
group_by(Gross_income_quintile) %>%
arrange(desc(total)) %>%
mutate(text.y = cumsum(total)) %>%
ggplot(aes(x = Gross_income_quintile, fill = Allowance, order = Allowance)) +
geom_bar(aes(y = total), stat = "identity", position = "stack") +
geom_text(aes(label = text, y = text.y), vjust = 1, fontface = "bold", size = 5.5) +
scale_fill_manual(values = c(rep(RColorBrewer::brewer.pal(11, name="Spectral"), 2), "black")) +
theme_light(base_size = 18)
hes10hh %>%
group_by(Gross_income_quintile = factor(as.numeric(cut(Total_current_weekly_HH_income_from_all_sources,
breaks = total.inc.quintiles,
include.lowest = TRUE)))) %>%
summarise(total_welfare = sum(Current_weekly_HH_income_from_government_pensions_and_allowances * Weight_HH_HES),
extra_gst = sum(Weekly_household_GST_on_all_goods_and_services_FIS * Weight_HH_HES) / 2) %>%
ungroup %>%
mutate(prop_welfare = total_welfare/sum(total_welfare),
implied_transfr = prop_welfare * compensatory.transfers / 52.5,
comp_adequacy = implied_transfr/extra_gst)
.Last.value %>% sapply(sum)
.Last.value[,-1] %>% sapply(sum)
proportion_of_welfare_by_quintile <-
hes10hh %>%
group_by(Gross_income_quintile = factor(as.numeric(cut(Total_current_weekly_HH_income_from_all_sources,
breaks = total.inc.quintiles,
include.lowest = TRUE)))) %>%
summarise(total_welfare = sum(Current_weekly_HH_income_from_government_pensions_and_allowances * Weight_HH_HES),
extra_gst = sum(Weekly_household_GST_on_all_goods_and_services_FIS * Weight_HH_HES) / 2) %>%
ungroup %>%
mutate(prop_welfare = total_welfare/sum(total_welfare),
implied_transfr = prop_welfare * compensatory.transfers / 52.5,
comp_adequacy = implied_transfr/extra_gst) %>%
sapply(FUN = function(x)sum(as.numeric(x)))
proportion_of_welfare_by_quintile
hes10hh %>%
group_by(Gross_income_quintile = factor(as.numeric(cut(Total_current_weekly_HH_income_from_all_sources,
breaks = total.inc.quintiles,
include.lowest = TRUE)))) %>%
summarise(total_welfare = sum(Current_weekly_HH_income_from_government_pensions_and_allowances * Weight_HH_HES),
extra_gst = sum(Weekly_household_GST_on_all_goods_and_services_FIS * Weight_HH_HES) / 2) %>%
ungroup %>%
mutate(prop_welfare = total_welfare/sum(total_welfare),
implied_transfr = prop_welfare * compensatory.transfers / 52.5,
comp_adequacy = implied_transfr/extra_gst)
16/37
21/4
data.frame(expense = c("Net revenue gain", "Personal tax cuts", "Transfer payments"),
number = c(115,21,16)) %>%
mutate(fraction = number/sum(number)) %>%
arrange(fraction) %>%
mutate(ymax = cumsum(fraction),
ymin = c(0, lag(ymax)[-1]))
data.frame(expense = c("Net revenue gain", "Personal tax cuts", "Transfer payments"),
number = c(115,21,16)) %>%
mutate(fraction = number/sum(number)) %>%
arrange(fraction) %>%
mutate(ymax = cumsum(fraction),
ymin = c(0, lag(ymax)[-1])) %>%
grplot(aes(fill = expense, ymax = ymax, ymin = ymin, xmax = 4, xmin = 3)) +
geom_rect(colour = theGrey) +
coord_polar(theta = "y") +
xlim(0,4)
data.frame(expense = c("Net revenue gain", "Personal tax cuts", "Transfer payments"),
number = c(115,21,16)) %>%
mutate(fraction = number/sum(number)) %>%
arrange(fraction) %>%
mutate(ymax = cumsum(fraction),
ymin = c(0, lag(ymax)[-1])) %>%
grplot(aes(fill = expense, ymax = ymax, ymin = ymin, xmax = 4, xmin = 3)) +
geom_rect(colour = theGrey) +
coord_polar(theta = "y") +
xlim(0,4) +
theme(panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
data.frame(expense = c("Net revenue gain", "Personal tax cuts", "Transfer payments"),
number = c(115,21,16)) %>%
mutate(fraction = number/sum(number)) %>%
arrange(fraction) %>%
mutate(ymax = cumsum(fraction),
ymin = c(0, lag(ymax)[-1])) %>%
grplot(aes(fill = expense, ymax = ymax, ymin = ymin, xmax = 4, xmin = 3)) +
geom_rect(colour = theGrey) +
geom_text(aes(label = expense)) +
coord_polar(theta = "y") +
xlim(0,4) +
theme(panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
data.frame(expense = c("Net revenue gain", "Personal tax cuts", "Transfer payments"),
number = c(115,21,16)) %>%
mutate(fraction = number/sum(number)) %>%
arrange(fraction) %>%
mutate(ymax = cumsum(fraction),
ymin = c(0, lag(ymax)[-1])) %>%
grplot(aes(fill = expense, ymax = ymax, ymin = ymin, xmax = 4, xmin = 3)) +
geom_rect(colour = theGrey) +
geom_text(aes(x = 3, y = ymax, label = expense)) +
coord_polar(theta = "y") +
xlim(0,4) +
theme(panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
data.frame(expense = c("Net revenue gain", "Personal tax cuts", "Transfer payments"),
number = c(115,21,16)) %>%
mutate(fraction = number/sum(number)) %>%
arrange(fraction) %>%
mutate(ymax = cumsum(fraction),
ymin = c(0, lag(ymax)[-1])) %>%
grplot(aes(fill = expense, ymax = ymax, ymin = ymin, xmax = 4, xmin = 3)) +
geom_rect(colour = theGrey) +
geom_text(aes(x = 4.2, y = ymax, label = expense)) +
coord_polar(theta = "y") +
xlim(0,4.2) +
theme(panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
data.frame(expense = c("Net revenue gain", "Personal tax cuts", "Transfer payments"),
number = c(115,21,16)) %>%
mutate(fraction = number/sum(number)) %>%
arrange(fraction) %>%
mutate(ymax = cumsum(fraction),
ymin = c(0, lag(ymax)[-1])) %>%
grplot(aes(fill = expense, ymax = ymax, ymin = ymin, xmax = 4, xmin = 3)) +
geom_rect(colour = theGrey) +
geom_text(aes(x = 4.2, y = ymin, label = expense)) +
coord_polar(theta = "y") +
xlim(0,4.2) +
theme(panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
data.frame(expense = c("Net revenue gain", "Personal tax cuts", "Transfer payments"),
number = c(115,21,16)) %>%
mutate(fraction = number/sum(number)) %>%
arrange(fraction) %>%
mutate(ymax = cumsum(fraction),
ymin = c(0, lag(ymax)[-1])) %>%
grplot(aes(fill = expense, ymax = ymax, ymin = ymin, xmax = 4, xmin = 3)) +
geom_rect(colour = theGrey) +
geom_text(aes(x = 4.2, y = ymax, label = expense)) +
coord_polar(theta = "y") +
xlim(0,4.2) +
theme(panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
data.frame(expense = c("Net revenue gain", "Personal tax cuts", "Transfer payments"),
number = c(115,21,16)) %>%
mutate(fraction = number/sum(number)) %>%
arrange(fraction) %>%
mutate(ymax = cumsum(fraction),
ymin = c(0, lag(ymax)[-1])) %>%
grplot(aes(fill = expense, ymax = ymax, ymin = ymin, xmax = 4, xmin = 3)) +
geom_rect(colour = theGrey) +
geom_text(aes(x = 4.2, y = 0.5 * (ymin + ymax), label = expense)) +
coord_polar(theta = "y") +
xlim(0,4.2) +
theme(panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
data.frame(expense = c("Net revenue gain", "Personal tax cuts", "Transfer payments"),
number = c(115,21,16)) %>%
mutate(fraction = number/sum(number)) %>%
arrange(fraction) %>%
mutate(ymax = cumsum(fraction),
ymin = c(0, lag(ymax)[-1])) %>%
grplot(aes(fill = expense, ymax = ymax, ymin = ymin, xmax = 4, xmin = 3)) +
geom_rect(colour = theGrey) +
geom_text(aes(x = 4.2, y = 0.5 * (ymin + ymax), label = expense), hjust = 0) +
coord_polar(theta = "y") +
xlim(0,4.2) +
theme(panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
data.frame(expense = c("Net revenue gain", "Personal tax cuts", "Transfer payments"),
number = c(115,21,16)) %>%
mutate(fraction = number/sum(number)) %>%
arrange(fraction) %>%
mutate(ymax = cumsum(fraction),
ymin = c(0, lag(ymax)[-1])) %>%
grplot(aes(fill = expense, ymax = ymax, ymin = ymin, xmax = 4, xmin = 3)) +
geom_rect(colour = theGrey) +
geom_text(aes(x = 4.5, y = 0.5 * (ymin + ymax), label = expense)) +
coord_polar(theta = "y") +
xlim(0,4.2) +
theme(panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
data.frame(expense = c("Net revenue gain", "Personal tax cuts", "Transfer payments"),
number = c(115,21,16)) %>%
mutate(fraction = number/sum(number)) %>%
arrange(fraction) %>%
mutate(ymax = cumsum(fraction),
ymin = c(0, lag(ymax)[-1])) %>%
grplot(aes(fill = expense, ymax = ymax, ymin = ymin, xmax = 4, xmin = 3)) +
geom_rect(colour = theGrey) +
geom_text(aes(x = 4.5, y = 0.5 * (ymin + ymax), label = expense)) +
coord_polar(theta = "y") +
xlim(0,4.6) +
theme(panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
hes10hh %>%
group_by(Gross_income_quintile = factor(as.numeric(cut(Total_current_weekly_HH_income_from_all_sources,
breaks = total.inc.quintiles,
include.lowest = TRUE)))) %>%
summarise(total_welfare = sum(Current_weekly_HH_income_from_government_pensions_and_allowances * Weight_HH_HES),
extra_gst = sum(Weekly_household_GST_on_all_goods_and_services_FIS * Weight_HH_HES) / 2) %>%
ungroup %>%
mutate(extra_gst.prop = extra_gst / sum(extra_gst),
prop_welfare = total_welfare/sum(total_welfare),
implied_transfr = prop_welfare * compensatory.transfers / 52.5,
comp_adequacy = implied_transfr/extra_gst)
proportion_of_welfare_by_quintile %>%
mutate(fraction = extra_gst.prop) %>%
arrange(fraction) %>%
mutate(ymax = cumsum(fraction),
ymin = c(0, lag(ymax)[-1])) %>%
grplot(aes(fill = expense, ymax = ymax, ymin = ymin, xmax = 4, xmin = 3)) +
geom_rect(colour = theGrey) +
geom_text(aes(x = 4.5, y = 0.5 * (ymin + ymax), label = expense)) +
coord_polar(theta = "y") +
xlim(0,4.6) +
theme(panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
proportion_of_welfare_by_quintile %>%
mutate(fraction = extra_gst.prop) %>%
arrange(fraction) %>%
mutate(ymax = cumsum(fraction),
ymin = c(0, lag(ymax)[-1])) %>%
grplot(aes(fill = Gross_income_quintile, ymax = ymax, ymin = ymin, xmax = 4, xmin = 3)) +
geom_rect(colour = theGrey) +
geom_text(aes(x = 4.5, y = 0.5 * (ymin + ymax), label = Gross_income_quintile)) +
coord_polar(theta = "y") +
xlim(0,4.6) +
theme(panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
hes10hh %>%
group_by(Gross_income_quintile = factor(as.numeric(cut(Total_current_weekly_HH_income_from_all_sources,
breaks = total.inc.quintiles,
include.lowest = TRUE)))) %>%
summarise(total_welfare = sum(Current_weekly_HH_income_from_government_pensions_and_allowances * Weight_HH_HES),
extra_gst = sum(Weekly_household_GST_on_all_goods_and_services_FIS * Weight_HH_HES) / 2) %>%
ungroup %>%
mutate(extra_gst.prop = extra_gst / sum(extra_gst),
prop_welfare = total_welfare/sum(total_welfare),
implied_transfr = prop_welfare * compensatory.transfers / 52.5,
comp_adequacy = implied_transfr/extra_gst)
proportion_of_welfare_by_quintile <-
hes10hh %>%
group_by(Gross_income_quintile = factor(as.numeric(cut(Total_current_weekly_HH_income_from_all_sources,
breaks = total.inc.quintiles,
include.lowest = TRUE)))) %>%
summarise(total_welfare = sum(Current_weekly_HH_income_from_government_pensions_and_allowances * Weight_HH_HES),
extra_gst = sum(Weekly_household_GST_on_all_goods_and_services_FIS * Weight_HH_HES) / 2) %>%
ungroup %>%
mutate(extra_gst.prop = extra_gst / sum(extra_gst),
prop_welfare = total_welfare/sum(total_welfare),
implied_transfr = prop_welfare * compensatory.transfers / 52.5,
comp_adequacy = implied_transfr/extra_gst)
proportion_of_welfare_by_quintile %>%
mutate(fraction = extra_gst.prop) %>%
arrange(fraction) %>%
mutate(ymax = cumsum(fraction),
ymin = c(0, lag(ymax)[-1])) %>%
grplot(aes(fill = Gross_income_quintile, ymax = ymax, ymin = ymin, xmax = 4, xmin = 3)) +
geom_rect(colour = theGrey) +
geom_text(aes(x = 4.5, y = 0.5 * (ymin + ymax), label = Gross_income_quintile)) +
coord_polar(theta = "y") +
xlim(0,4.6) +
theme(panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
proportion_of_welfare_by_quintile
hes10hh %>%
select(Weekly_household_GST_on_all_goods_and_services_FIS
, Weekly_household_final_income_FIS
, Weight_HH_HES
, Household_weekly_expenditure_on_income_tax_HES_only) %>%
group_by(Income_quintile = ntile(Weekly_household_final_income_FIS, 5)) %>%
summarise(avg.GST = weighted.mean(Weekly_household_GST_on_all_goods_and_services_FIS,
Weight_HH_HES)) %>%
ungroup %>%
mutate(prop.GST = avg.GST/sum(avg.GST)) %>%
arrange(Income_quintile)
hes10hh %>%
select(Weekly_household_GST_on_all_goods_and_services_FIS
, Weekly_household_final_income_FIS
, Weight_HH_HES
, Household_weekly_expenditure_on_income_tax_HES_only) %>%
group_by(Gross_income_quintile = factor(as.numeric(cut(Total_current_weekly_HH_income_from_all_sources,
breaks = total.inc.quintiles,
include.lowest = TRUE)))) %>%
summarise(avg.GST = weighted.mean(Weekly_household_GST_on_all_goods_and_services_FIS,
Weight_HH_HES)) %>%
ungroup %>%
mutate(prop.GST = avg.GST/sum(avg.GST)) %>%
arrange(Gross_income_quintile)
hes10hh %>%
select(Weekly_household_GST_on_all_goods_and_services_FIS
, Total_current_weekly_HH_income_from_all_sources
, Weekly_household_final_income_FIS
, Weight_HH_HES
, Household_weekly_expenditure_on_income_tax_HES_only) %>%
group_by(Gross_income_quintile = factor(as.numeric(cut(Total_current_weekly_HH_income_from_all_sources,
breaks = total.inc.quintiles,
include.lowest = TRUE)))) %>%
summarise(avg.GST = weighted.mean(Weekly_household_GST_on_all_goods_and_services_FIS,
Weight_HH_HES)) %>%
ungroup %>%
mutate(prop.GST = avg.GST/sum(avg.GST)) %>%
arrange(Gross_income_quintile)
hes10hh %>%
group_by.income_quintile %>%
summarise(total_welfare = weighted.mean(w = Weight_HH_HES, Current_weekly_HH_income_from_government_pensions_and_allowances))
group_by.income_quintile <- function(.data, type = "Current_weekly_HH_disposable_income"){
if(type == "Current_weekly_HH_disposable_income"){
group_by(.data, income_quintile = factor(as.numeric(cut(Current_weekly_HH_disposable_income,
breaks = total.inc.deciles,
include.lowest = TRUE))))
}
}
welfare_by_hh_gross_income <-
hes10hh %>%
group_by.income_quintile %>%
summarise(total_welfare = weighted.mean(w = Weight_HH_HES, Current_weekly_HH_income_from_government_pensions_and_allowances))
welfare_by_hh_gross_income
group_by.income_quintile <- function(.data, type = "Current_weekly_HH_disposable_income"){
if(type == "Current_weekly_HH_disposable_income"){
group_by(.data, income_quintile = factor(as.numeric(cut(Current_weekly_HH_disposable_income,
breaks = total.inc.quintiles,
include.lowest = TRUE))))
}
}
hes10hh %>%
group_by.income_quintile %>%
summarise(total_welfare = weighted.mean(w = Weight_HH_HES, Current_weekly_HH_income_from_government_pensions_and_allowances))
hes10hh %>%
group_by.income_quintile %>%
summarise(total_welfare = sum(Weight_HH_HES * Current_weekly_HH_income_from_government_pensions_and_allowances))
hes10hh %>%
group_by.income_quintile %>%
summarise(total_welfare = sum(Weight_HH_HES * Current_weekly_HH_income_from_government_pensions_and_allowances)) %>%
ungroup %>%
mutate(prop_welfare = total_welfare/sum(total_welfare))
proportion_of_welfare_by_quintile
hes.sih.vars <- read_excel("./SIH/HES_and_SIH_variable_listing.xlsx")
# See page 21 of HES 2009-10 user guide
# http://www.ausstats.abs.gov.au/ausstats/subscriber.nsf/0/1D03ACBBD40275ADCA257A3900173E85/$File/65030_1.pdf
hes.sih.vars %<>%
mutate(Definition = ifelse(HES_basic_name == "COICEXP", paste0(Definition, "_COICOP"), Definition))
hes.sih.vars %<>%
gather(GROUP, variable, -Definition) %>%
mutate(variable = gsub("[^A-Za-z0-9]", "", variable)) %>%
filter(complete.cases(.)) %>%
spread(GROUP, variable) %>%
mutate(
# replace all nonletters with _ unless they occur at the end of the name,
# in which case delete it
Definition_new = gsub("[^A-Za-z]+(?!$)", "_", Definition, perl = TRUE),
Definition_new = gsub("[^A-Za-z]+$", "", Definition_new)
)
setwd("C:/Users/hparsonage/Negative_gearing/Negative_gearing")
proportion_of_welfare_by_quintile %>%
mutate(`Total welfare` = grattan_dollar(total_welfare * 52.5))
proportion_of_welfare_by_quintile %>%
mutate(`Total welfare` = grattan_dollar(total_welfare * 52.5),
`Increase in GST burden` = grattan_dollar(extra_gst * 52.5),
`Relative increase in GST burden` = scales::percent(extra_gst.prop))
proportion_of_welfare_by_quintile_pretty <-
proportion_of_welfare_by_quintile %>%
mutate(`Total welfare` = grattan_dollar(total_welfare * 52.5),
`Increase in GST burden` = grattan_dollar(extra_gst * 52.5),
`Relative increase in GST burden` = scales::percent(extra_gst.prop)) %>%
select(-contains("_"))
kable(proportion_of_welfare_by_quintile_pretty)
?kable
kable(proportion_of_welfare_by_quintile_pretty,
align = rep("r", ncol(proportion_of_welfare_by_quintile_pretty)))
proportion_of_welfare_by_quintile_pretty <-
proportion_of_welfare_by_quintile %>%
arrange(Gross_income_quintile) %>%
mutate(`Gross income quintile` = Gross_income_quintile,
`Total welfare` = grattan_dollar(total_welfare * 52.5),
`Increased GST burden` = grattan_dollar(extra_gst * 52.5),
`Increased GST burden (%)` = scales::percent(extra_gst.prop),
`Share of total welfare` = scales::percent(prop_welfare),
`Implied compensation` = grattan_dollar(implied_transfr * 52.5),
`Adequacy of compo` = scales::percent(comp_adequacy)) %>%
select(-contains("_"))
kable(proportion_of_welfare_by_quintile_pretty,
align = rep("r", ncol(proportion_of_welfare_by_quintile_pretty)))
welfare.by.income.quintile %>%
mutate(Allowance = factor(Allowance, levels = (welfare.by.income.quintile$Allowance), ordered = TRUE)) %>%
mutate(text = ifelse(Gross_income_quintile == 2 & total > 1e7, gsub("_", " ", Allowance, fixed = TRUE), NA_character_)) %>%
group_by(Gross_income_quintile) %>%
arrange(desc(total)) %>%
mutate(text.y = cumsum(total)) %>%
ggplot(aes(x = Gross_income_quintile, fill = Allowance, order = Allowance)) +
geom_bar(aes(y = total), stat = "identity", position = "stack") +
geom_text(aes(label = text, y = text.y), vjust = 1, fontface = "bold", size = 5.5) +
scale_fill_manual(values = c(rep(RColorBrewer::brewer.pal(11, name="Spectral"), 2), "black")) +
theme_light(base_size = 18)
proportion_of_welfare_by_quintile <-
hes10hh %>%
group_by(Gross_income_quintile = factor(as.numeric(cut(Total_current_weekly_HH_income_from_all_sources,
breaks = total.inc.quintiles,
include.lowest = TRUE)))) %>%
summarise(total_welfare = sum(Current_weekly_HH_income_from_government_pensions_and_allowances * Weight_HH_HES),
extra_gst = sum(Weekly_household_GST_on_all_goods_and_services_FIS * Weight_HH_HES) / 2) %>%
ungroup %>%
mutate(extra_gst.prop = extra_gst / sum(extra_gst),
prop_welfare = total_welfare/sum(total_welfare),
implied_transfr = prop_welfare * compensatory.transfers / 52.5,
comp_adequacy = implied_transfr/extra_gst)

scale_y_continuous(label=percent) +
annotate("text",
label = "Old rate",
size = 7.14,
fontface = "bold",
color = gpal(2)[1],
x = 50e3,
y = 0.38,
vjust = 1) +
annotate("text",
label = "New rate",
size = 7.14,
fontface = "bold",
color = gpal(2)[2],
x = 88e3,
y = 0.205,
vjust = 0,
hjust = 0)
})
}
)
renderPlot
?renderPlot
?sidebarLayout
shinyApp(
ui = sidebarLayout(
fluid = FALSE,
sidebarPanel = sidebarPanel(
sliderInput("rate_1", label = "$0-$18,200 marginal rate",
min = 0, max = 0.6, value = 0, step = 0.005),
sliderInput("rate_2", label = "$18,200-$37,000 marginal rate",
min = 0, max = 0.6, value = 0.19, step = 0.005),
sliderInput("rate_3", label = "$37,000-$80,000 marginal rate",
min = 0, max = 0.6, value = 0.325, step = 0.005),
sliderInput("rate_4", label = "$80,000-$180,000 marginal rate",
min = 0, max = 0.6, value = 0.37, step = 0.005),
sliderInput("rate_5", label = "$180,000- marginal rate",
min = 0, max = 0.6, value = 0.45, step = 0.005)
),
mainPanel(
tableOutput("values")
)
)
,
#####################################
#####################################
#               SERVER              #
#####################################
#####################################
server = function(input, output) {
sliderValues <- reactive({
# The heavy lifting begins here.
tax_rates <-
data.table(
brackets = c(0, 18200, 37000, 80000, 180000),
rates = c(input$rate_1,
input$rate_2,
input$rate_3,
input$rate_4,
input$rate_5)
) %>%
mutate(
tax_amount = NA_real_
)
for (i in 1:nrow(tax_rates)){
if (i == 1 || i == 2) {
tax_rates$tax_amount <- 0
} else {
tax_rates$tax_amount[i] <-
tax_rates$tax_amount[i - 1] +
tax_rates$rates[i - 1] * (tax_rates$brackets[i] - tax_rates$brackets[i - 1])
}
}
txamt <- function(bracket.lwr){
tax_rates %>%
filter(brackets == bracket.lwr) %$%
tax_amount
}
txmr <- function(bracket.lwr){
tax_rates %>%
filter(brackets == bracket.lwr) %$%
rates
}
new_income_tax <- function(income){
ML.lower <- 20542
ML.upper <- 24167
medicare.base.rate <- 0.015
LITO <- ifelse(income < 37000, 445, ifelse(income < 66667,
445 - ((income - 37000) * 0.015), 0))
tax <- ifelse(income < 18200, 0, ifelse(income < 37000,
txmr(18200) * (income - 18200), # from 0.19
ifelse(income < 80000,
txamt(37000) + txmr(37000) * (income - 37000), # from 0.325
ifelse(income < 180000,
txamt(80000) + txmr(80000) * (income - 80000), # from 0.37
txamt(180000) + txmr(180000) * (income - 180000)))))
medicare.levy <- ifelse(income <= ML.lower, 0, ifelse(income > ML.lower & income <= ML.upper,
0.1 * (income - 20542),
0.015 * income))
out <- pmax(tax + medicare.levy - LITO, 0)
return(out)
}
fread(sample_file_of(2013), select = "Taxable_Income") %>%
mutate(diff = income_tax(Taxable_Income) - new_income_tax(Taxable_Income)) %$%
{sum(diff)*50 - forty.three} %>%
grattan_dollar(.) ->
the_amount_remaining
# Reactive expression to compose a data frame containing all of
# the values
# Compose data frame
data.frame(
Marginal.Rate = c("$0-$18,200",
"$18,200-$37,000",
"$37,000-$80,000",
"$80,000-$180,000",
"$180,000-",
"Amount"),
Value = as.character(c(input$rate_1,
input$rate_2,
input$rate_3,
input$rate_4,
input$rate_5,
the_amount_remaining)),
stringsAsFactors=FALSE)
})
# Show the values using an HTML table
output$values <- renderTable(
expr = sliderValues(),
align = "llr",
include.rownames = FALSE
)
}
)
?shinyApp
?runApp
fread(sample_file_of(2013), select = "Taxable_Income") %>%
readr::write_csv("Just_Taxable_Income.csv")
getwd()
setwd("C:/Users/hparsonage/Dropbox (Grattan Institute)/Budget Repair Report/Data and analysis/CGT/Negative_gearing")
sample_file_of(2013)
setwd("C:/Users/hparsonage/Dropbox (Grattan Institute)/Budget Repair Report/Data and analysis/CGT/Negative_gearing")
get_sample_file(2013, select = "Taxable_Income") %>%
readr::write_csv("Just_Taxable_Income.csv")
fread(sample_file_of(2013), select = "Taxable_Income") %>%
readr::write_csv("Just_Taxable_Income.csv")
?hPLot
devtools::install_github('ramnathv/rCharts')
library(rCharts)
?rPlot
setwd("C:/Users/hparsonage/Negative_gearing/Negative_gearing")
setwd("C:/Users/hparsonage/Negative_gearing/Negative_gearing")
source('~/.active-rstudio-document', echo=TRUE)
hes.sih.vars %>% filter(grepl("GST", Definition))
hes10hh %>% select(TOTGST)
hes10hh %>% select(Weekly_household_GST_on_all_goods_and_services_FIS) %>% head
hes10hh %>%
select(Current_weekly_HH_income_from_government_pensions_and_allowances, total.inc.percentiles)
hes10hh %>%
select(Current_weekly_HH_income_from_government_pensions_and_allowances, Weekly_household_final_income_FIS)
hes10hh %>%
select(Weekly_household_GST_on_all_goods_and_services_FIS, Weekly_household_final_income_FIS)
hes10hh %>%
select(Weekly_household_GST_on_all_goods_and_services_FIS, Weekly_household_final_income_FIS, Weight_HH_HES) %>%
mutate(ratio_GST = Weekly_household_GST_on_all_goods_and_services_FIS / Weekly_household_final_income_FIS) %>%
group_by(Income_quintile = ntile(Weekly_household_final_income_FIS, 5)) %>%
summarise(mean_ratio = weighted.mean(ratio_GST, w = Weight_HH_HES),
se_ratio = weighted.mean.se(ratio_GST, w = Weight_HH_HES))
hes10hh %>%
select(Weekly_household_GST_on_all_goods_and_services_FIS, Weekly_household_final_income_FIS, Weight_HH_HES) %>%
mutate(ratio_GST = Weekly_household_GST_on_all_goods_and_services_FIS / Weekly_household_final_income_FIS) %>%
group_by(Income_quintile = ntile(Weekly_household_final_income_FIS, 5)) %>%
summarise(mean_ratio = weighted.mean(ratio_GST, w = Weight_HH_HES),
se_ratio = weighted.var.se(ratio_GST, w = Weight_HH_HES))
hes10hh %>%
select(Weekly_household_GST_on_all_goods_and_services_FIS, Weekly_household_final_income_FIS, Weight_HH_HES) %>%
mutate(ratio_GST = Weekly_household_GST_on_all_goods_and_services_FIS / Weekly_household_final_income_FIS) %>%
group_by(Income_quintile = ntile(Weekly_household_final_income_FIS, 5)) %>%
summarise(mean_ratio = weighted.mean(ratio_GST, w = Weight_HH_HES),
se_ratio = weighted.var.se(ratio_GST, w = Weight_HH_HES)) %>%
arrange(Income_quintile)
hes10hh %>%
select(Weekly_household_GST_on_all_goods_and_services_FIS, Weekly_household_final_income_FIS, Weight_HH_HES) %>%
mutate(ratio_GST = Weekly_household_GST_on_all_goods_and_services_FIS / Weekly_household_final_income_FIS) %>%
group_by(Income_quintile = ntile(Weekly_household_final_income_FIS, 5)) %>%
summarise(mean_ratio = weighted.mean(ratio_GST, w = Weight_HH_HES),
se_ratio = weighted.var.se(ratio_GST, w = Weight_HH_HES)) %>%
arrange(Income_quintile) %>% ungroup %>% mutate(mean_ratio15pc = mean_ratio * 1.5)
hes10hh %>%
select(Weekly_household_GST_on_all_goods_and_services_FIS, Weekly_household_final_income_FIS, Weight_HH_HES) %>%
mutate(ratio_GST = Weekly_household_GST_on_all_goods_and_services_FIS / Weekly_household_final_income_FIS) %>%
group_by(Income_quintile = ntile(Weekly_household_final_income_FIS, 5)) %>%
summarise(mean_ratio = weighted.mean(ratio_GST, w = Weight_HH_HES),
se_ratio = weighted.var.se(ratio_GST, w = Weight_HH_HES),) %>%
arrange(Income_quintile) %>% ungroup %>% mutate(mean_ratio15pc = mean_ratio * 1.5)
hes10hh %>%
select(Weekly_household_GST_on_all_goods_and_services_FIS, Weekly_household_final_income_FIS, Weight_HH_HES) %>%
mutate(ratio_GST = Weekly_household_GST_on_all_goods_and_services_FIS / Weekly_household_final_income_FIS) %>%
group_by(Income_quintile = ntile(Weekly_household_final_income_FIS, 5)) %>%
summarise(mean_ratio = weighted.mean(ratio_GST, w = Weight_HH_HES),
se_ratio = weighted.var.se(ratio_GST, w = Weight_HH_HES),
max_income = max(Weekly_household_final_income_FIS * 52.5)) %>%
arrange(Income_quintile)
hes.sih.vars %>% filter(grepl("FIS$", Definition))
hes.sih.vars %>% filter(grepl("FIS", Definition))
hes.sih.vars %>% filter(grepl("tax.*FIS", Definition))
hes.sih.vars %>% filter(grepl("tax", Definition))
hes10hh %>%
select(Weekly_household_GST_on_all_goods_and_services_FIS
, Weekly_household_final_income_FIS
, Weight_HH_HES
, Household_weekly_expenditure_on_income_tax_HES_only) %>%
mutate(ratio_GST = Weekly_household_GST_on_all_goods_and_services_FIS / Weekly_household_final_income_FIS) %>%
group_by(Income_quintile = ntile(Weekly_household_final_income_FIS, 5)) %>%
summarise(mean_ratio = weighted.mean(ratio_GST, w = Weight_HH_HES),
se_ratio = weighted.var.se(ratio_GST, w = Weight_HH_HES),
max_income = max(Weekly_household_final_income_FIS * 52.5),
mean_income_tax = weighted.mean(Household_weekly_expenditure_on_income_tax_HES_only, w = Weight_HH_HES),
max_income_tax = max(Household_weekly_expenditure_on_income_tax_HES_only)
) %>%
arrange(Income_quintile)
22*52
income_tax(30e3)
income_tax(20e3)
income_tax(22e3)
income_tax(25e3)
hes10hh %>%
select(Weekly_household_GST_on_all_goods_and_services_FIS
, Weekly_household_final_income_FIS
, Weight_HH_HES
, Household_weekly_expenditure_on_income_tax_HES_only) %>%
mutate(ratio_GST = Weekly_household_GST_on_all_goods_and_services_FIS / Weekly_household_final_income_FIS) %>%
group_by(Income_quintile = ntile(Weekly_household_final_income_FIS, 5)) %>%
summarise(mean_ratio = weighted.mean(ratio_GST, w = Weight_HH_HES),
se_ratio = weighted.var.se(ratio_GST, w = Weight_HH_HES),
max_income = max(Weekly_household_final_income_FIS * 52.5),
mean_income_tax = weighted.mean(Household_weekly_expenditure_on_income_tax_HES_only, w = Weight_HH_HES),
max_income_tax = max(Household_weekly_expenditure_on_income_tax_HES_only),
count_zero_income_tax = sum(Household_weekly_expenditure_on_income_tax_HES_only < 1)
) %>%
arrange(Income_quintile)
hes10hh %>%
select(Weekly_household_GST_on_all_goods_and_services_FIS
, Weekly_household_final_income_FIS
, Weight_HH_HES
, Household_weekly_expenditure_on_income_tax_HES_only) %>%
mutate(ratio_GST = Weekly_household_GST_on_all_goods_and_services_FIS / Weekly_household_final_income_FIS) %>%
group_by(Income_quintile = ntile(Weekly_household_final_income_FIS, 5)) %>%
summarise(mean_ratio = weighted.mean(ratio_GST, w = Weight_HH_HES),
se_ratio = weighted.var.se(ratio_GST, w = Weight_HH_HES),
max_income = max(Weekly_household_final_income_FIS * 52.5),
mean_income_tax = weighted.mean(Household_weekly_expenditure_on_income_tax_HES_only, w = Weight_HH_HES),
max_income_tax = max(Household_weekly_expenditure_on_income_tax_HES_only),
prop_zero_income_tax = mean(Household_weekly_expenditure_on_income_tax_HES_only < 1)
) %>%
arrange(Income_quintile)
hes10hh %>%
select(Weekly_household_GST_on_all_goods_and_services_FIS
, Weekly_household_final_income_FIS
, Weight_HH_HES
, Household_weekly_expenditure_on_income_tax_HES_only) %>%
mutate(ratio_GST = Weekly_household_GST_on_all_goods_and_services_FIS / Weekly_household_final_income_FIS) %>%
group_by(Income_quintile = ntile(Weekly_household_final_income_FIS, 5)) %>%
summarise(mean_ratio = weighted.mean(ratio_GST, w = Weight_HH_HES),
#se_ratio = weighted.var.se(ratio_GST, w = Weight_HH_HES),
max_income = max(Weekly_household_final_income_FIS * 52.5),
mean_income_tax = weighted.mean(Household_weekly_expenditure_on_income_tax_HES_only, w = Weight_HH_HES),
max_income_tax = max(Household_weekly_expenditure_on_income_tax_HES_only),
prop_zero_income_tax = mean(Household_weekly_expenditure_on_income_tax_HES_only < 1)
) %>%
arrange(Income_quintile)
income_tax(23e3, fy.year = "2009-10")
income_tax(23e3, fy.year = "2009-10")/52
income_tax(22e3, fy.year = "2009-10")/52
income_tax(21e3, fy.year = "2009-10")/52
income_tax(20e3, fy.year = "2009-10")/52
income_tax(18e3, fy.year = "2009-10")/52
hes10hh %>%
select(Weekly_household_GST_on_all_goods_and_services_FIS
, Weekly_household_final_income_FIS
, Weight_HH_HES
, Household_weekly_expenditure_on_income_tax_HES_only) %>%
mutate(ratio_GST = Weekly_household_GST_on_all_goods_and_services_FIS / Weekly_household_final_income_FIS) %>%
group_by(Income_quintile = ntile(Weekly_household_final_income_FIS, 5)) %>%
summarise(mean_ratio = weighted.mean(ratio_GST, w = Weight_HH_HES),
#se_ratio = weighted.var.se(ratio_GST, w = Weight_HH_HES),
max_income = max(Weekly_household_final_income_FIS * 52.5),
mean_income_tax = weighted.mean(Household_weekly_expenditure_on_income_tax_HES_only, w = Weight_HH_HES),
max_income_tax = max(Household_weekly_expenditure_on_income_tax_HES_only),
prop_zero_income_tax = mean(Household_weekly_expenditure_on_income_tax_HES_only < 1)
) %>%
arrange(Income_quintile) %$%
{0.06906682 / sum(mean_ratio)}
hes10hh %>%
select(Weekly_household_GST_on_all_goods_and_services_FIS
, Weekly_household_final_income_FIS
, Weight_HH_HES
, Household_weekly_expenditure_on_income_tax_HES_only) %>%
group_by(Income_quintile = ntile(Weekly_household_final_income_FIS, 5)) %>%
summarise(avg.GST = weighted.mean(Weekly_household_GST_on_all_goods_and_services_FIS,
Weight_HH_HES)) %>%
ungroup %>%
mutate(prop.GST = avg.GST/sum(avg.GST))
hes10hh %>%
select(Weekly_household_GST_on_all_goods_and_services_FIS
, Weekly_household_final_income_FIS
, Weight_HH_HES
, Household_weekly_expenditure_on_income_tax_HES_only) %>%
group_by(Income_quintile = ntile(Weekly_household_final_income_FIS, 5)) %>%
summarise(avg.GST = weighted.mean(Weekly_household_GST_on_all_goods_and_services_FIS,
Weight_HH_HES)) %>%
ungroup %>%
mutate(prop.GST = avg.GST/sum(avg.GST)) %>%
arrange(Income_quintile)
hes10hh %>%
age_mutate
setwd("C:/Users/hparsonage/Negative_gearing/Negative_gearing")
library(ggplot2)
library(grattan)
library(VIM) # VIM::hotdeck used for imputation
library(dplyr)
library(foreign)
library(survey)
library(data.table)
library(readxl)
library(readr)
library(tidyr)
library(magrittr)
weighted.var.se <- function(x, w, na.rm=FALSE){
# Computes the variance of a weighted mean following Cochran 1977 definition
# http://stats.stackexchange.com/questions/25895/computing-standard-error-in-weighted-mean-estimation
if (na.rm) { w <- w[i <- !is.na(x)]; x <- x[i] }
n = length(w)
xWbar = weighted.mean(x,w,na.rm=na.rm)
wbar = mean(w)
out = n/((n-1)*sum(w)^2)*(sum((w*x-wbar*xWbar)^2)-2*xWbar*sum((w-wbar)*(w*x-wbar*xWbar))+xWbar^2*sum((w-wbar)^2))
return(out)
}
age_mutate <- function(.hes){
.hes %>%
mutate(
age_group = as.character(Age_of_HH_reference_person),
age_group = ifelse(grepl("^[0-9]+$", age_group),
ifelse(as.numeric(age_group) < 20,
"20 or under",
paste((as.numeric(age_group) %/% 5) * 5,
"to",
(as.numeric(age_group) %/% 5) * 5 + 4)),
age_group
)
)
}
hes10hh_raw <- read.dta("./HES/hes10bh.dta")
source('~/.active-rstudio-document', echo=TRUE)
hes10hh %>%
age_mutate
GST_url <- "http://data.gov.au/dataset/e29ef9ca-0d1a-47ec-9e9b-14a79a941511/resource/0e56ca39-832e-40ca-bc62-297a3fb552cf/download/taxstats2013gst1gstwetlctmultiyear.xlsx"
GET(GST_url, write_disk("GST_by_year.xlsx"))
library(httr)
GET(GST_url, write_disk("GST_by_year.xlsx"))
read_excel("GST_by_year.xlsx", sheet = "GST Table 1", skip = 2) %>%
setnames(1:2, c("Selected_item", "unit"))
read_excel("GST_by_year.xlsx", sheet = "GST Table 1", skip = 2) %>%
setnames(1:2, c("Selected_item", "unit")) %>%
gather_("year", "value", "2001-02":"2013-14")
read_excel("GST_by_year.xlsx", sheet = "GST Table 1", skip = 2) %>%
setnames(1:2, c("Selected_item", "unit")) %>% head
read_excel("GST_by_year.xlsx", sheet = "GST Table 1", skip = 2) %>%
setnames(1:2, c("Selected_item", "unit")) %>% head
gather(year, value, `2001-02`:`2013-14`)
read_excel("GST_by_year.xlsx", sheet = "GST Table 1", skip = 2) %>%
setnames(1:2, c("Selected_item", "unit")) %>%
gather(year, value, `2001-02`:`2013-14`)
read_excel("GST_by_year.xlsx", sheet = "GST Table 1", skip = 2) %>%
setnames(1:2, c("Selected_item", "unit")) %>%
gather(year, value, `2001–02`:`2013-14`)
GST_inflator_from0910_to1314 <-
read_excel("GST_by_year.xlsx", sheet = "GST Table 1", skip = 2) %>%
setnames(1:2, c("Selected_item", "unit")) %>%
gather(year, value, `2001–02`:`2013-14`) %>%
filter(complete.cases(.)) %>%
filter(grepl("Net.GST", Selected_item))
GST_inflator_from0910_to1314
read_excel("GST_by_year.xlsx", sheet = "GST Table 1", skip = 2) %>%
setnames(1:2, c("Selected_item", "unit")) %>%
gather(year, value, `2001–02`:`2013-14`) %>%
filter(complete.cases(.)) %>%
filter(grepl("Net.GST", Selected_item)) %>%
filter(grepl("^((2009)|(2013))", year)) %$%
{last(value) / first(value)}
read_excel("GST_by_year.xlsx", sheet = "GST Table 1", skip = 2) %>%
setnames(1:2, c("Selected_item", "unit")) %>%
gather(year, value, `2001–02`:`2013-14`) %>%
mutate(value = as.numeric(value)) %>%
filter(complete.cases(.)) %>%
filter(grepl("Net.GST", Selected_item)) %>%
filter(grepl("^((2009)|(2013))", year)) %$%
{last(value) / first(value)}
read_excel("GST_by_year.xlsx", sheet = "GST Table 1", skip = 2) %>%
setnames(1:2, c("Selected_item", "unit")) %>%
gather(year, value, `2001–02`:`2013-14`)
GST_inflator_from0910_to1314 <-
read_excel("GST_by_year.xlsx", sheet = "GST Table 1", skip = 2) %>%
setnames(1:2, c("Selected_item", "unit")) %>%
gather(year, value, `2001–02`:`2013-14`) %>%
mutate(value = as.numeric(value)) %>%
filter(complete.cases(.)) %>%
filter(grepl("Net.GST", Selected_item)) %>%
filter(grepl("^((2009)|(2013))", year)) %$%
{last(value) / first(value)}
hes10hh %>%
age_mutate %>%
group_by(Income_decile = ntile(Weekly_household_final_income_FIS, 10), age_group) %>%
summarise(avg.GST.15 = 1.5 * weighted.mean(Weekly_household_GST_on_all_goods_and_services_FIS,
Weight_HH_HES)) %>%
ungroup %>%
mutate(avg.GST.15 = avg.GST.15 * GST_inflator_from0910_to1314)
GST_15_by_age_income %>%
grplot(aes(x = age_group, y = Income_decile, alpha = avg.GST.15)) +
geom_tile(fill = Orange) +
geom_text(data = tail(arrange(GST_15_by_age_income, avg.GST.15)),
aes(label = grattan_dollar(avg.GST.15)),
show_guide = FALSE) +
scale_alpha_continuous(label=grattan_dollar) +
scale_x_discrete(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
xlab("Age") +
coord_equal() +
theme_grattan(base_size = 18) +
theme(panel.grid.major.y = element_blank(),
legend.position = "right",
legend.key.size = unit(2, "lines"))
GST_15_by_age_income
GST_15_by_age_income <-
hes10hh %>%
age_mutate %>%
group_by(Income_decile = ntile(Weekly_household_final_income_FIS, 10), age_group) %>%
summarise(avg.GST.15 = 1.5 * weighted.mean(Weekly_household_GST_on_all_goods_and_services_FIS,
Weight_HH_HES)) %>%
ungroup %>%
mutate(avg.GST.15 = avg.GST.15 * GST_inflator_from0910_to1314)
GST_15_by_age_income %>%
grplot(aes(x = age_group, y = Income_decile, alpha = avg.GST.15)) +
geom_tile(fill = Orange) +
geom_text(data = tail(arrange(GST_15_by_age_income, avg.GST.15)),
aes(label = grattan_dollar(avg.GST.15)),
show_guide = FALSE) +
scale_alpha_continuous(label=grattan_dollar) +
scale_x_discrete(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
xlab("Age") +
coord_equal() +
theme_grattan(base_size = 18) +
theme(panel.grid.major.y = element_blank(),
legend.position = "right",
legend.key.size = unit(2, "lines"))
GST_15_by_age_income %>%
grplot(aes(x = age_group, y = Income_decile, alpha = avg.GST.15)) +
geom_tile(fill = Orange) +
geom_text(data = tail(arrange(GST_15_by_age_income, avg.GST.15)),
aes(label = grattan_dollar(avg.GST.15)),
show_guide = FALSE) +
scale_alpha_continuous(label=grattan_dollar) +
scale_x_discrete(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
xlab("Age") +
coord_equal() +
theme_grattan(base_size = 18) +
theme(panel.grid.major.y = element_blank(),
legend.position = "right",
legend.key.size = unit(2, "lines"))
?file.exists
GST_inflator_from0910_to1314 <-
read_excel("GST_by_year.xlsx", sheet = "GST Table 1", skip = 2) %>%
setnames(1:2, c("Selected_item", "unit")) %>%
gather(year, value, `2001–02`:`2013-14`) %>%
mutate(value = as.numeric(value)) %>%
filter(complete.cases(.)) %>%
filter(grepl("Net.GST", Selected_item)) %>%
filter(grepl("^((2009)|(2013))", year)) %$%
{last(value) / first(value)}
read_excel("GST_by_year.xlsx", sheet = "GST Table 1", skip = 2) %>%
setnames(1:2, c("Selected_item", "unit")) %>%
setnames(new = gsub("([0-9]{4}).([0-9]{2})", "\\1-\\2", names(.))
gather(year, value, `2001-02`:`2013-14`)
read_excel("GST_by_year.xlsx", sheet = "GST Table 1", skip = 2) %>%
setnames(1:2, c("Selected_item", "unit")) %>%
setnames(new = gsub("([0-9]{4}).([0-9]{2})", "\\1-\\2", names(.)) %>%
gather(year, value, `2001-02`:`2013-14`)
read_excel("GST_by_year.xlsx", sheet = "GST Table 1", skip = 2) %>%
setnames(1:2, c("Selected_item", "unit")) %>%
setnames(new = gsub("([0-9]{4}).([0-9]{2})", "\\1-\\2", names(.))) %>%
gather(year, value, `2001-02`:`2013-14`)
read_excel("GST_by_year.xlsx", sheet = "GST Table 1", skip = 2) %>%
setnames(1:2, c("Selected_item", "unit")) %>%
setnames(old = names(.), new = gsub("([0-9]{4}).([0-9]{2})", "\\1-\\2", names(.))) %>%
gather(year, value, `2001-02`:`2013-14`)
read_excel("GST_by_year.xlsx", sheet = "GST Table 1", skip = 2) %>%
setnames(1:2, c("Selected_item", "unit")) %>%
# en dash caution
setnames(old = names(.), new = gsub("([0-9]{4}).([0-9]{2})", "\\1-\\2", names(.))) %>%
gather(year, value, `2001-02`:`2013-14`) %>%
mutate(value = as.numeric(value)) %>%
filter(complete.cases(.)) %>%
filter(grepl("Net.GST", Selected_item)) %>%
filter(grepl("^((2009)|(2013))", year)) %$%
{last(value) / first(value)}
1:5 %.% sum
1:5 %>% sum
data.frame(x = 1:5) %>% summarise(mean(x))
data.frame(x = 1:5) %,% summarise(mean(x))
data.frame(x = 1:5) %.% summarise(mean(x))
help("Deprecated")

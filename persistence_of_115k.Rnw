\documentclass{grattan}

\title{Persistence of incomes}
\author{HP}

\addbibresource{bibliography.bib}

\begin{document}
\contentspage

<<knitrsettings, echo=FALSE, warning=FALSE, message=FALSE>>=
my_emf <- function(file, width, height){
  devEMF::emf(file, width=width, height=height,
              family = "Arial")
}

# if(require(extrafont) && any(grepl("Arial", extrafont::fonts()))){
#   font_import(pattern = "Arial")
#   my_pdf <- function(file, width, height){
#     pdf.options(family = "Arial")
#     pdf(file = file, width = width, height = height)
#   } 
#   theme_hugh <- function(...) {theme_hugh(...) + theme(text = element_text(family = "Arial"))}
# } else {
  my_pdf <- function(file, width, height){
    pdf(file = file, width, height = height)
  }
# }

# knitr chunk opts
# fig.width must = out.width and same for *.height
knitr::opts_chunk$set(fig.width=11.000, fig.height=7.00, 
                      out.width="11.000in", out.height="7.00in", 
                      fig.show='hide',echo=FALSE,
                      message=FALSE, warning=FALSE
                      ,fig.path = "figure_persistence_of_115k/"
                      ,cache=FALSE
                      ,cache.path = "cache_persistence_of_115k/"
                      ,dev=c('my_pdf', 'my_emf', 'png')
                      ,fig.ext = c("pdf", "emf", "png")
)
@


<<preamble>>=
library(foreign)
library(ggplot2)
library(scales)
library(grattan)
library(data.table)
library(tidyr)
library(dplyr)
library(magrittr)

weighted.var.se <- function(x, w, na.rm=FALSE){
  # Computes the variance of a weighted mean following Cochran 1977 definition
  # http://stats.stackexchange.com/questions/25895/computing-standard-error-in-weighted-mean-estimation
  if (na.rm) { w <- w[i <- !is.na(x)]; x <- x[i] }
  n = length(w)
  xWbar = weighted.mean(x,w,na.rm=na.rm)
  wbar = mean(w)
  out = n/((n-1)*sum(w)^2)*(sum((w*x-wbar*xWbar)^2)-2*xWbar*sum((w-wbar)*(w*x-wbar*xWbar))+xWbar^2*sum((w-wbar)^2))
  return(out)
}
@

<<load_dta, cache=FALSE, eval=FALSE, include=FALSE>>=
# Do we actually want responding persons?
read_hilda_file <- 
  function(filename){
    dplyr::mutate(data.table::data.table(foreign::read.dta(filename)),
                  orig.filename = filename)
  }

enumerate.person.files <- 
  list.files(path = "./HILDA"
                    ,pattern = "^E.*dta$"  # Enumerate person
                    ,full.names = TRUE)

enumerate.person.files.names <-
  gsub("^.*/([^/]+)\\.dta$", "\\1", enumerate.person.files )

hilda_list <-
  lapply(enumerate.person.files, read_hilda_file)

names(hilda_list) <- enumerate.person.files.names

lapply(seq_along(hilda_list), function(element) readr::write_csv(hilda_list[[element]], path = paste0("./HILDA/csv/", names(hilda_list)[element], ".csv")))

@

<<load_csvs, cache=FALSE>>=
read_hilda_strip_first_letter_add_column_id <- 
  function(filename){  
    temp <- fread(filename)
    nms <- names(temp)
    # detect the prefix if it is the wave id.
    nms.prefixes <- unique(gsub("^(.).*$", "\\1", nms))
    yearid <- nms.prefixes[nms.prefixes %in% letters[1:13]]
    # we're interested in stripping the names that specify the wave id (a-m)
    setnames(temp, old = nms, new = gsub("^[a-m]", "", nms))
    
    wave.decoder <- 
      data.table(
        wave = letters[1:13],
        Year = 2000 + 1:13
      ) %>%
      setkey(wave)
    
    temp %<>% mutate(wave = yearid) 
    
    setkey(temp, wave)
    temp <- merge(temp, wave.decoder)
    
    temp %<>% mutate(income = tifefp)
    
    tmp.svy.quantiles <- 
      survey::svydesign(ids = ~xwaveid, strata = ~xhhstrat, weights = ~hhwte,
                        data = temp) %>%
      survey::svyquantile(x = ~income, design = ., quantiles = (0:10)/10)
    
    quantile.index <- c(1,4:11)
    
    temp %<>% mutate(tot_inc_percentile_contemporaneous = 
                       as.numeric(factor(cut(income,
                                             # deciles.  So choose the first (the min,
                                             # the eighth, the ninth, and the tenth). 
                                             # This corresponds to the bottom, the 
                                             # 80-90th percentiles and the 90-100 perc-
                                             # entiles.
                                             breaks = tmp.svy.quantiles[quantile.index],
                                             include.lowest = TRUE))),
                     tot_inc_percentile_contemporaneous = ifelse(tot_inc_percentile_contemporaneous == 1,
                                                                 1,
                                                                 tot_inc_percentile_contemporaneous + 11 - length(quantile.index)),
                     top_decile = tot_inc_percentile_contemporaneous == max(tot_inc_percentile_contemporaneous),
                     second_dec = tot_inc_percentile_contemporaneous == max(tot_inc_percentile_contemporaneous) - 1,
                     third_decile = tot_inc_percentile_contemporaneous == max(tot_inc_percentile_contemporaneous) - 2,
                     fourth_decile = tot_inc_percentile_contemporaneous == max(tot_inc_percentile_contemporaneous) - 3,
                     fifth_decile = tot_inc_percentile_contemporaneous == max(tot_inc_percentile_contemporaneous) - 4,
                     sixth_decile = tot_inc_percentile_contemporaneous == max(tot_inc_percentile_contemporaneous) - 5,
                     bottom_deciles = tot_inc_percentile_contemporaneous < max(tot_inc_percentile_contemporaneous) - 5,
                     top_quintile = top_decile | second_dec)
                                                                 
    return(temp)
  }

hilda_list <- 
  lapply(list.files(path = "./HILDA/csv/", full.names = TRUE,
                    pattern = "^E"),  # enumerated person
         read_hilda_strip_first_letter_add_column_id)
@

<<income_vars>>=
all_hilda <- rbindlist(hilda_list, fill = TRUE)

prop_stay_by_id <- 
  all_hilda %>%
  dplyr::select(
    xwaveid
    ,wave
    ,lnwte
    ,hhwte
    ,tifefp
    ,tifefn
    ,top_decile
    ,top_quintile
  ) %>%
  filter(lnwte != 0) %>%
  group_by(xwaveid) %>%
  filter(ever_in_top_decile = sum(top_decile) > 0) %>%
  arrange(wave) %>%
  mutate(cum_topdecile = cumsum(top_decile)) %>%
  group_by(xwaveid) %>%
  mutate(first_enters_decile = lag(cum_topdecile) == 0 & top_decile,
         first_enters_decile_at = as.character(ifelse(first_enters_decile, wave, NA_character_)),
         has_entered_top_decile = as.logical(cumsum(top_decile)),
         top_quintile_after_top_decile = top_decile | (as.logical(cumsum(top_decile)) & top_quintile),
         leaves_decile = top_decile > lead(top_decile),
         leaves_quintile = top_quintile > lead(top_quintile)) %>%  #only TRUE followed by false
  group_by(xwaveid) %>%
  summarise(potential_time_in_top_decile = sum(has_entered_top_decile),
            years_in_sample = n(),
            time_in_top_decile = sum(top_decile),
            time_in_top_quintile = sum(top_quintile_after_top_decile),
            last_lnwte = last(lnwte)) 

# Note that quite a lot have na valued weights  - 
prop_stay_by_id.narm <- 
  prop_stay_by_id %>%
  filter(complete.cases(.))

weighted.mean(prop_stay_by_id.narm$time_in_top_quintile/12,# / prop_stay_by_id.narm$potential_time_in_top_decile, 
              prop_stay_by_id.narm$last_lnwte)
@

<<those_in_top_decile>>=
all_hilda %>%
  dplyr::select(
    xwaveid
    ,wave
    ,Year
    ,lnwte
    ,hhwte
    ,tifefp
    ,tifefn
    ,income
    ,top_decile
    ,top_quintile
  ) %>%
  filter(lnwte != 0) %>%
  group_by(xwaveid) %>%
  arrange(wave) %>%
  mutate(cum_topdecile = cumsum(top_decile)) %>%
  group_by(xwaveid) %>%
  mutate(first_enters_decile = lag(cum_topdecile) == 0 & top_decile,
         first_enters_decile_at = as.character(ifelse(first_enters_decile, wave, NA_character_)),
         has_entered_top_decile = as.logical(cumsum(top_decile)),
         top_quintile_after_top_decile = top_decile | (as.logical(cumsum(top_decile)) & top_quintile),
         leaves_decile = top_decile > lead(top_decile),
         leaves_quintile = top_quintile > lead(top_quintile),
         top_deciler = as.logical(max(top_decile)),
         not_top_deciler_but_top_quintile = !top_deciler & max(top_quintile),
         last_lnwte = last(lnwte)) %>%
  mutate(real_income = cpi_inflator(income, from_fy = yr2fy(Year), to_fy = "2013-14")) %>%
  group_by(top_deciler, not_top_deciler_but_top_quintile) %>%
  summarise(mean.income = weighted.mean(real_income, last_lnwte),
            sum(top_decile),
            sd.income = weighted.var.se(real_income, last_lnwte))
@

<<>>=
all_hilda %>%
  filter(lnwte != 0 | is.na(lnwte)) %>%
  group_by(xwaveid) %>%
  mutate(ever_in_top_decile = sum(top_decile) > 0) %>%
  ungroup %>%
  filter(ever_in_top_decile) %>%
  group_by(xwaveid) %>%
  summarise(years_in_top_decile = sum(top_decile),
            years_in_top_quinti = sum(top_quintile),
            years_in_sample = n(),
            last_lnwte = last(lnwte),
            last_age = last(hgage)) %>%
  ungroup %>%
  filter(!is.na(last_lnwte)) %>%
  
  summarise(prop_time_top_quintile = weighted.mean(years_in_top_decile / years_in_sample,
                                                   last_lnwte))
  
@

<<>>=
all_hilda %>% 
  group_by(xwaveid) %>%
  filter(sum(top_decile) > 0) %>%
  filter(lnwte != 0) %>%
  #mutate(inc_quantile = paste0("Q", tot_inc_percentile_contemporaneous)) %>% 
  as.data.table %>%
  setkey(tot_inc_percentile_contemporaneous) %>%
  merge(data.table(tot_inc_percentile_contemporaneous = 1:10), all.y = TRUE) %>%
  ggplot(aes(x = factor(tot_inc_percentile_contemporaneous))) + 
  geom_bar(aes(y = ..count../sum(..count..)))
@

<<>>=
all_hilda %>% 
  group_by(xwaveid) %>%
  filter(max(hgage) <= 60,
         min(hgage) >= 30) %>%
  
  # Exclude xwaveids who never have top_decile
  filter(sum(top_decile) > 0) %>%
  filter(lnwte != 0) %>%
  as.data.table %>%
  
  # Forces 2:3 to be present in the chart:
  setkey(tot_inc_percentile_contemporaneous) %>%
  merge(data.table(tot_inc_percentile_contemporaneous = 1:10), all.y = TRUE) %>%
  
  grplot(aes(x = factor(tot_inc_percentile_contemporaneous))) + 
  geom_bar(aes(y = ..count../sum(..count..), 
               weight = lnwte))
@

<<Prop_time_in_decile_limited_age_eperson>>=
all_hilda %>% 
  group_by(xwaveid) %>%
  filter(max(hgage) <= 60,
         min(hgage) >= 30) %>%
  filter(sum(top_decile) > 0) %>%
  filter(lnwte != 0) %>%
  mutate(lnwte_last = last(lnwte)) %>% 
  #mutate(inc_quantile = paste0("Q", tot_inc_percentile_contemporaneous)) %>% 
  as.data.table %>% # select(xwaveid, Year, lnwte, top_decile, tot_inc_percentile_contemporaneous) 
  ungroup %>%
  group_by(tot_inc_percentile_contemporaneous) %>%
  summarise(time.in = sum(lnwte_last)) %>%
  ungroup %>%
  mutate(time.in = time.in/sum(time.in)) %>%
  arrange(tot_inc_percentile_contemporaneous) %>%
  setkey(tot_inc_percentile_contemporaneous) %>%
  merge(data.table(tot_inc_percentile_contemporaneous = 1:10), all.y = TRUE) %>%
  mutate(time.in = ifelse(tot_inc_percentile_contemporaneous %in% 1:3,
                          first(time.in)/3,
                          time.in)) %>%
  # tbl_df
  grplot(aes(x = factor(tot_inc_percentile_contemporaneous),
             y = time.in)) + 
  geom_bar(stat = "identity") + 
  scale_y_continuous("Proportion of time spent",
                     label=percent,
                     expand = c(0,0),
                     limits = c(0,0.5)) + 
  scale_x_discrete("Contemporaneous total income decile") + 
  theme(axis.title.y = element_text(angle = 90))
@
\begin{figure}
\Caption{For those who reach the top decile, most will stay in the top two deciles}%
{Proportion of years spent in given decile by those respondents aged no more than 60 and no less than 30 who were in the top decile at least once in the HILDA survey period}
{fig:Prop_time_in_decile_limited_age_eperson}
\includegraphics[width=\columnwidth]{figure_persistence_of_115k/Prop_time_in_decile_limited_age_eperson-1}
\end{figure}


<<use_last_lnwte>>=
all_hilda %>% 
  group_by(xwaveid) %>%
  filter(max(hgage) <= 60,
         min(hgage) >= 30) %>%
  filter(sum(top_decile) > 0) %>%
  filter(lnwte != 0) %>%
  mutate(lnwte_last = last(lnwte)) %>% 
  #mutate(inc_quantile = paste0("Q", tot_inc_percentile_contemporaneous)) %>% 
  as.data.table %>% # select(xwaveid, Year, lnwte, top_decile, tot_inc_percentile_contemporaneous) 
  ungroup %>%
  group_by(tot_inc_percentile_contemporaneous) %>%
  summarise(time.in = sum(lnwte_last)) %>%
  ungroup %>%
  mutate(time.in = time.in/sum(time.in)) %>%
  arrange(tot_inc_percentile_contemporaneous)
@

\subsection{How many hit top decile only once}
<<>>=
all_hilda %>% 
  group_by(xwaveid) %>%
  filter(lnwte != 0) %>%
  mutate(hits_top_decile_only_once = sum(top_decile) == 1,
         never_hits_top_decile = sum(top_decile) == 0,
         prop_in_top_decile = mean(top_decile),
         last_lnwte = last(lnwte)) %>%
  as.data.table %$% 
  weighted.mean(hits_top_decile_only_once, last_lnwte)
@

\subsection{Number of times in top decile}
<<>>=
number_times_top_decile <- 
  all_hilda %>% 
  filter(lnwte != 0 | is.na(lnwte)) %>%
  group_by(xwaveid) %>%
  mutate(lnwte_last = last(lnwte),
         z = n(),
         sum_topdecile = sum(top_decile)) %>%
  ungroup %>%
  filter(!is.na(lnwte_last)) %>% 
  group_by(sum_topdecile) %>%
  dplyr::summarise(mean.time = sum(lnwte_last)) %>%
  ungroup %>%
  mutate(mean.time = mean.time/sum(mean.time)) %>%
  arrange(sum_topdecile)

number_times_top_decile
@

<<years_in_top_decile>>=
number_times_top_decile %>%
  grplot(aes(x = factor(sum_topdecile),
             y = mean.time)) + 
  geom_bar(stat = "identity") + 
  scale_y_continuous("Prop of respondents",
                     label=percent,
                     expand = c(0,0),
                     limits = c(0,1)) + 
  xlab("Years in top decile") 
@
\begin{figure}
\Caption{}{Proportion of respondents in HILDA}{fig:years_in_top_decile}
\includegraphics[width=\columnwidth]{figure_persistence_of_115k/years_in_top_decile-1}
\notes{}

\source{HILDA}
\end{figure}

<<decile_presence_by_top_decile_longevity>>=
decile_presence_by_top_decile_longevity <- 
  all_hilda %>%
  group_by(xwaveid) %>%
  filter(max(hgage) <= 60,
         min(hgage) >= 30) %>%
  group_by(xwaveid) %>%
  mutate(top_deciler = sum(top_decile) > 0,
         sum_topdecile = sum(top_decile),
         last_lnwte = last(lnwte)) %>%
  ungroup %>%
  filter(last_lnwte > 0, !is.na(last_lnwte),
         top_deciler) %>%
  group_by(sum_topdecile) %>%
  summarise(Q10 = weighted.mean(top_decile, last_lnwte),
            #Q10nw = mean(top_decile),
            Q09 = weighted.mean(second_dec,last_lnwte),
            Q08 = weighted.mean(third_decile,last_lnwte),
            Q07 = weighted.mean(fourth_decile,last_lnwte),
            Q06 = weighted.mean(fifth_decile,last_lnwte),
            Q05 = weighted.mean(sixth_decile, last_lnwte),
            QX = weighted.mean(bottom_deciles,last_lnwte),
            n = sum(last_lnwte)) %>%
  arrange(sum_topdecile)

decile_presence_by_top_decile_longevity %>%
  gather(decile, presence, Q10:QX) %>%
  arrange(sum_topdecile, desc(decile)) %>%
  mutate(decile.text = ifelse(sum_topdecile == 1,
                              as.character(decile),
                              NA_character_)) %>%
  mutate(presence = 13 * presence) %>%
  group_by(sum_topdecile) %>%
  arrange(sum_topdecile, decile) %>%
  mutate(text.y = cumsum(presence),
         text.color = ifelse(decile == "Q10", "white", "black")) %>%
  ungroup %>%
  arrange(sum_topdecile, decile) %>%
  grplot(aes(x = factor(sum_topdecile),
             y = presence,
             fill = decile)) + 
  geom_bar(stat = "identity") + 
  xlab("Years in top decile") +
  scale_y_continuous("Years", breaks = 0:13) + 
  geom_text(aes(y = text.y, label = decile.text, 
                color = text.color), 
            vjust = 1.2) +
  scale_color_manual(values = c("white" = "white", "black" = "black"))
@
\begin{figure}
\includegraphics[width=\columnwidth]{figure_persistence_of_115k/decile_presence_by_top_decile_longevity-1}7
\end{figure}

<<marimekko>>=
marimekko_data_decile_presence_by_top_decile_longevity <- 
  decile_presence_by_top_decile_longevity %>%
  gather(decile, presence, Q10:QX) %>%
  mutate(subpresence = presence * n) %>%
  arrange(sum_topdecile, decile) %>%
  group_by(decile) %>%
  mutate(cumsum_n = cumsum(n),
         cumsum_lag = lag(cumsum_n, default = 0),
         cumsum_lead = lead(cumsum_n, default = Inf)) %>%
  ungroup %>%
  group_by(sum_topdecile) %>%
  mutate(cumsubpresence = cumsum(presence),
         cumsubpresence_lag = lag(cumsubpresence, default=0)) %>%
  ungroup %>%
  mutate(xmin = cumsum_lag/max(cumsum_n),
         xmax = cumsum_n/max(cumsum_n),
         xcenter = (xmin + xmax)/2)

marimekko_data_decile_presence_by_top_decile_longevity %>%
  grplot(aes(xmin = xmin,
             xmax = xmax,
             ymin = cumsubpresence_lag,
             ymax = cumsubpresence, 
             fill = decile)) + 
  geom_rect() + 
  geom_text(aes(x = xcenter,
                y = (cumsubpresence_lag + cumsubpresence)/2,
                label = ifelse(xcenter == min(xcenter), as.character(decile), NA_character_),
                color = ifelse(decile == first(decile), "white", "black"))) + 
  geom_abline(yintercept = 0, slope = 1, color = "white") + 
  scale_color_manual(values = c("white" = "white", "black" = "black")) +
  scale_y_continuous(expand = c(0,0),
                     label = percent) + 
  scale_x_continuous("Years in top decile",
                     expand = list(c(0,0.075), c(0,0)),
                     breaks = unique((marimekko_data_decile_presence_by_top_decile_longevity$xmin + marimekko_data_decile_presence_by_top_decile_longevity$xmax)/2),
                     labels = 1:13) + 
  scale_y_continuous("Prop time in each decile",
                     label=percent,
                     breaks = c(0:10)/10,
                     expand = list(c(0,0), c(0,0.1)))
@
\begin{figure}
\Caption{}{Percentage of time cohort was in decile}{fig:marimekko}
\includegraphics[width=\columnwidth]{figure_persistence_of_115k/marimekko}
\end{figure}

<<marimekko_munge_for_ppt>>=
marimekko.data %>%
  mutate(xmax.ppt = 100 * xmax/max(xmin)) %>%
  group_by(sum_topdecile) %>%
  mutate(uncum.y = c(first(ymax), diff(ymax))) %>%
  select(sum_topdecile, decile, xmax.ppt, uncum.y) %>%
  spread(decile, uncum.y) %>%
  write_csv("hilda_marimekko.csv")
@


\section{Responding person}
<<load_resp_dta, include=FALSE, eval=FALSE>>=
read_hilda_file <- 
  function(filename){
    dplyr::mutate(data.table::data.table(foreign::read.dta(filename)),
                  orig.filename = filename)
  }

enumerate.resp_person.files <- 
  list.files(path = "./HILDA"
                    ,pattern = "^R.*dta$"  # Enumerate person
                    ,full.names = TRUE)

enumerate.resp_person.files.names <-
  gsub("^.*/([^/]+)\\.dta$", "\\1", enumerate.resp_person.files)

hilda_list_resp <-
  lapply(enumerate.resp_person.files, read_hilda_file)

names(hilda_list_resp) <- enumerate.resp_person.files.names

lapply(seq_along(hilda_list_resp), function(element) readr::write_csv(hilda_list_resp[[element]], path = paste0("./HILDA/csv/", names(hilda_list_resp)[element], ".csv")))
@

<<load_csv_resp>>=

@


\end{document}